{
	"$schema": "http://json-schema.org/draft-04/schema#",
	"id" : "specificResource.json",
    "title": "Definitions: Specific Resources.",
    "description": "Schemas in #/definitions detect or validate keys/objects used in describing Specific Resources (Section 4).",
    "definitions": {
    
        "specificeResourceDetected": 
        {
          "title": "Detection: Specific Resource",
          "description": "True when object has exactly 1 source value and at least one of purpose, selector, state, styleClass, renderedVia, scope (Section 4)",        
          "type": "object",
          "properties":
          {
            "source":
                {
                  "type": ["string", "object" ],
                  "oneOf": [
                    { "$ref": "id.json#/definitions/stringUri" },
                    { "$ref": "bodyTarget.json#/definitions/externalWebResourceDetected"}
                  ]
                }
           },
           "required": ["source"], 
           "anyOf": [
                { "$ref": "otherProperties.json#/definitions/purposeRecognizedIfPresent",
                  "required": ["purpose"]},
                { "$ref": "#/definitions/selectorDetected" },
                { "$ref": "#/definitions/stateDetected"}
           ]
        },
        
        "selectorDetected":
        {
          "title": "Definition: selector",
          "description": "True when object tested has selector with value matching one or more of the selectors described in the model (Section 4.2)",        
          "type": "object",
          "properties":
          {
            "selector":
            {  
                 "oneOf": [
                  { "type": "string",
                    "$ref": "id.json#/definitions/stringUri" 
                  },
                  { "type": "object",
                    "anyOf": [
                         {"$ref": "#/definitions/fragmentSelectorDetected"},
                         {"$ref": "#/definitions/cssSelectorDetected"},
                         {"$ref": "#/definitions/xpathSelectorDetected"},
                         {"$ref": "#/definitions/textQuoteSelectorDetected"},
                         {"$ref": "#/definitions/textPositionSelectorDetected"},
                         {"$ref": "#/definitions/dataPositionSelectorDetected"},
                         {"$ref": "#/definitions/rangeSelectorDetected"},
                         {"$ref": "#/definitions/svgSelectorDetected"}                         
                      ] 
                  },
                  {
                      "type": "array",
                      "minItems": 1,
                      "items":
                      { "oneOf": [
                          { "type": "string",
                            "$ref": "id.json#/definitions/stringUri" 
                          },
                          { "type": "object",
                            "anyOf": [
                                 {"$ref": "#/definitions/fragmentSelectorDetected"},
                                 {"$ref": "#/definitions/cssSelectorDetected"},
                                 {"$ref": "#/definitions/xpathSelectorDetected"},
                                 {"$ref": "#/definitions/textQuoteSelectorDetected"},
                                 {"$ref": "#/definitions/textPositionSelectorDetected"},
                                 {"$ref": "#/definitions/dataPositionSelectorDetected"},
                                 {"$ref": "#/definitions/rangeSelectorDetected"},
                                 {"$ref": "#/definitions/svgSelectorDetected"}                                 
                              ] 
                          }
                        ]
                     }
                  }
                ]
              }
           },
          "required": ["selector"]
       },

       "fragmentSelectorDetected":
       {
          "title": "Definition: fragment selector",
          "description": "True when object is a fragment selelctor (Section 4.2.1)",        
          "type": "object", 
          "properties":
          {
              "type": { "type": "string",
                        "enum": ["FragmentSelector"] },
              "value": { "type": "string" },
              "conformsTo": { "type": "string",
                              "format": "uri"},
              "refinedBy" : { "$ref": "#/definitions/refinedByDetected"}
          }, 
          "required": ["value", "type"] 
       },
       
       "cssSelectorDetected":
       {
          "title": "Definition: CssSelector selector",
          "description": "True when object is a CssSelector selelctor (Section 4.2.2)",        
          "type": "object", 
          "properties":
          {
              "type": { "type": "string",
                        "enum": ["CssSelector"] },
              "value": { "type": "string" },
              "id": { "$ref": "id.json#/definitions/stringUri" },
              "refinedBy" : { "$ref": "#/definitions/refinedByDetected"}
          }, 
          "required": [ "type"],
          "oneOf": [
            {"required": ["value"] },
            {"required": ["id"] }
          ] 
       },

       "xpathSelectorDetected":
       {
          "title": "Definition: XPath selector",
          "description": "True when object is a XPath selelctor (Section 4.2.3)",        
          "type": "object", 
          "properties":
          {
              "type": { "type": "string",
                        "enum": ["XPathSelector"] },
              "value": { "type": "string" },
              "id": { "$ref": "id.json#/definitions/stringUri" },
              "refinedBy" : { "$ref": "#/definitions/refinedByDetected"}
          }, 
          "required": ["type"],
          "oneOf": [
            {"required": ["value"] },
            {"required": ["id"] }
          ]           
       },

       "textQuoteSelectorDetected":
       {
          "title": "Definition: text quote selector",
          "description": "True when object is a text quote selelctor (Section 4.2.4)",        
          "type": "object", 
           "properties":
          {
              "type": { "type": "string",
                        "enum": ["TextQuoteSelector"] },
              "exact": { "type": "string" },
              "prefix": { "type": "string"},
              "suffix": { "type": "string"},
              "refinedBy" : { "$ref": "#/definitions/refinedByDetected"}
          }, 
          "required": ["exact", "type"]           
       },

       "textPositionSelectorDetected":
       {
          "title": "Definition: text position selector",
          "description": "True when object is a text position selelctor (Section 4.2.5)",        
          "type": "object", 
          "properties":
          {
              "type": { "type": "string",
                        "enum": ["TextPositionSelector"] },
              "start": { "type": "integer",
                         "minimum": 0 },
              "end": { "type": "integer",
                         "minimum": 0 },
              "refinedBy" : { "$ref": "#/definitions/refinedByDetected"}
          }, 
          "required": ["start", "end", "type"]                 
       },

       "dataPositionSelectorDetected":
       {
          "title": "Definition: data position selector",
          "description": "True when object is a data position selelctor (Section 4.2.6)",        
          "type": "object", 
          "properties":
          {
              "type": { "type": "string",
                        "enum": ["DataPositionSelector"] },
              "start": { "type": "integer",
                         "minimum": 0 },
              "end": { "type": "integer",
                         "minimum": 0 },
              "refinedBy" : { "$ref": "#/definitions/refinedByDetected"}
          }, 
          "required": ["start", "end", "type"]            
       },

       "svgSelectorDetected":
       {
          "title": "Definition: svg selector",
          "description": "True when object is a svg selelctor (Section 4.2.7)",        
          "type": "object", 
          "properties":
          {
              "type": { "type": "string",
                        "enum": ["SvgSelector"] },
              "value": { "type": "string" },
              "id": { "$ref": "id.json#/definitions/stringUri" },
              "refinedBy" : { "$ref": "#/definitions/refinedByDetected"}
          }, 
          "required": ["type"],
          "oneOf": [
            {"required": ["value"] },
            {"required": ["id"] }
          ]
       },

       "rangeSelectorDetected":
       {
          "title": "Definition: range selector",
          "description": "True when object is a range selelctor (Section 4.2.9)",        
          "type": "object", 
          "properties":
           {
              "type": { "type": "string",
                        "enum": ["RangeSelector"] },
              "refinedBy" : { "$ref": "#/definitions/refinedByDetected"}
           },
           "patternProperties":
           {
               "^(startSelector|endSelector)$":
               {    "type": "object",
                    "oneOf": [
                         {"$ref": "#/definitions/fragmentSelectorDetected"},
                         {"$ref": "#/definitions/cssSelectorDetected"},
                         {"$ref": "#/definitions/xpathSelectorDetected"},
                         {"$ref": "#/definitions/textQuoteSelectorDetected"},
                         {"$ref": "#/definitions/textPositionSelectorDetected"},
                         {"$ref": "#/definitions/dataPositionSelectorDetected"},
                         {"$ref": "#/definitions/svgSelectorDetected"}                                 
                      ] 
                }                   
             },
             "required": ["type", "startSelector", "endSelector"]           
       },
       
       "refinedByDetected":
       {
          "title": "Definition: refinedBy selector or state",
          "description": "True when object is a refinedBy selelctor or state (Section 4.2.8)",        
          "type": "object", 
          "oneOf": [
             {"$ref": "#/definitions/fragmentSelectorDetected"},
             {"$ref": "#/definitions/cssSelectorDetected"},
             {"$ref": "#/definitions/xpathSelectorDetected"},
             {"$ref": "#/definitions/textQuoteSelectorDetected"},
             {"$ref": "#/definitions/textPositionSelectorDetected"},
             {"$ref": "#/definitions/dataPositionSelectorDetected"},
             {"$ref": "#/definitions/rangeSelectorDetected"},
             {"$ref": "#/definitions/svgSelectorDetected"},
             {"$ref": "#/definitions/timeStateDetected"},
             {"$ref": "#/definitions/requestHeaderStateDetected"}                                      
           ]
       },
       
       "stateDetected" :
       {
          "title": "Definition: state",
          "description": "True when object tested has state with value matching one or more of the state classes described in the model (Section 4.3)",        
          "type": "object",
          "properties":
          {
            "state": 
            {
                "oneOf": [
                  { "type": "string",
                    "$ref": "id.json#/definitions/stringUri" 
                  },
                  { "type": "object",
                    "anyOf": [
                         {"$ref": "id.json#/definitions/idValueFound"},
                         {"$ref": "#/definitions/timeStateDetected"},
                         {"$ref": "#/definitions/requestHeaderStateDetected"}                         
                      ] 
                  },
                  {
                      "type": "array",
                      "minItems": 1,
                      "items":
                      { "oneOf": [
                          { "type": "string",
                            "$ref": "id.json#/definitions/stringUri" 
                          },
                          { "type": "object",
                            "anyOf": [
                                 {"$ref": "id.json#/definitions/idValueFound"},
                                 {"$ref": "#/definitions/timeStateDetected"},
                                 {"$ref": "#/definitions/requestHeaderStateDetected"}                         
                              ] 
                             }
                          ]
                      }
                   }
                ]                
            }
          }
       },
       
       "timeStateDetected": 
       {
          "title": "Definition: time state",
          "description": "True when object is a time state (Section 4.3.1)",        
          "type": "object", 
          "properties":
          {
              "type": { "type": "string",
                        "enum": ["TimeState"] },
              "sourceDate": { "oneOf": [
                                {"type": "string",
                                 "format": "date-time"},
                                { "type": "array", 
                                  "minItems": 1,
                                   "items":               
                                        {"type": "string",
                                         "format": "date-time"}
                                }
                              ]     
                            },
              "sourceDateStart": { "type": "string",
                                   "format": "date-time"},
              "sourceDateEnd": { "type": "string",
                                 "format": "date-time"},
              "cached": { "type": "string",
                              "format": "uri"}
          },
          "required": ["type"],
          "dependencies" : 
          {
                "sourceDateStart" : ["sourceDateEnd"],
                "sourceDateEnd": ["sourceDateStart"]
           },
           "not": 
           { "required": [ "sourceDate", "sourceDateStart", "sourceDateEnd" ] }
       },
       
       "requestHeaderStateDetected": 
       {
          "title": "Definition: request header state",
          "description": "True when object is a request header state (Section 4.3.2)",        
          "type": "object", 
          "properties":
          {
              "type": { "type": "string",
                        "enum": ["HttpRequestState"] },
              "value": { "type": "string"}
          },
          "required": ["type", "value"]
       },
       
       "stylesheetDetected":
       {
           
       },
       
       "cssStylesheetDetected":
       {
           
       },
       
       "styleClassDetected":
       {
           
       },
       
       "renderedViaDetected":
       {
           
       },
       
       "scopeDetected":
       {
           
       }
       
    }
}
