{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "bodyTarget.json",
    "title": "Definitions: Bodies and Targets.",
    "description": "Schemas in #/definitions detect or validate keys, objects or constraints variously applicable to Bodies and/or Targets (Section 3.2.1 - 3.2.6). Excludes Choice, Set and Specific Resources.",
    "definitions": 
    {
       "externalWebResourceDetected": 
        {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "title": "Definition: External Web Resource",      
        	"description": "True when the object is an External Web Resource, i.e., includes an id that is of format uri but does not contain value (Textual Body) or source (Specific Resource) keys (Sections 3.2.1, 3.2.4, 4).",
            "type": "object",
            "allOf": [ {"$ref": "id.json#/definitions/idValueFound"} ],
            "not": 
            { "anyOf": 
              [ 
                 { "required": ["value"] },
                 { "required": ["source"] }
              ]
            }
        },

        "textualBodyFound" : 
       {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "title": "Definition: Embedded Textual Body",      
        	"description": "True when the object is an Embedded Textual Body, i.e., includes the value key (Section 3.2.4).",
            "type" : "object",
            "properties" : 
            {
                 "value": 
                 {
                    "type": "string"
                 }
             },
             "required": [ "value" ] 
        } , 
        
        "targetResourcesFound" :
        {   
            "$schema": "http://json-schema.org/draft-04/schema#",
            "title": "Definition: Resources that can be used as Target",      
        	"description": "True when the string is format uri or the object is recognized as a valid target resource (Sections 3.2 and 4).",
            "type" : ["string", "object"], 
            "anyOf": [
               {"$ref": "id.json#/definitions/stringUri"}, 
               {"$ref": "choiceSet.json#/definitions/choiceDetected" }, 
               {"$ref": "choiceSet.json#/definitions/compositeDetected" }, 
               {"$ref": "choiceSet.json#/definitions/independentsDetected" }, 
               {"$ref": "choiceSet.json#/definitions/listDetected" }, 
               {"$ref": "specificResource.json#/definitions/specificeResourceDetected" },
               {"$ref": "#/definitions/externalWebResourceDetected" }
             ]              
          },
        
        "bodyResourcesFound" :
        {   
            "$schema": "http://json-schema.org/draft-04/schema#",
            "title": "Definition: Resources that can be used as Body",      
        	"description": "True when the string is format uri or the object is recognized as a valid body resource (Sections 3.2 and 4).",
            "type" : ["string", "object"], 
            "anyOf": [
               {"$ref": "id.json#/definitions/stringUri"}, 
               {"$ref": "choiceSet.json#/definitions/choiceDetected" }, 
               {"$ref": "choiceSet.json#/definitions/compositeDetected" }, 
               {"$ref": "choiceSet.json#/definitions/independentsDetected" }, 
               {"$ref": "choiceSet.json#/definitions/listDetected" }, 
               {"$ref": "specificResource.json#/definitions/specificeResourceDetected" },
               {"$ref": "#/definitions/externalWebResourceDetected" },
               {"$ref": "#/definitions/textualBodyFound" }
             ]              
        },
        
        "optionalBodyProperties" :
        {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "title": "Collate: Optional Body Keys",
            "description": "Supports validity checks of optional keys (if/when) used on External Web Resources, Specific Resources, Textual Body Resources (Sections 3.2.1-6, 3.3)",
            "oneOf": 
            [ 
               {"$ref": "specificResource.json#/definitions/specificeResourceDetected" },
               {"$ref": "#/definitions/externalWebResourceDetected" },
               {"$ref": "#/definitions/textualBodyFound" }
            ],
            "allOf" : 
            [
                   { "$ref": "#/definitions/resourceTypeRecognizedIfPresent" },
                   { "$ref": "#/definitions/formatValidIfPresent" },
                   { "$ref": "#/definitions/languageValidIfPresent" },
                   { "$ref": "#/definitions/processingLanguageValidIfPresent" },
                   { "$ref": "#/definitions/textDirectionValidIfPresent" }
    
            ]
        },        

        "optionalTargetProperties" :
        {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "title": "Collate: Optional Target Keys",
            "description": "Supports validity check of optional keys (if/when) used on External Web Resources, Specific Resources (Sections 3.2.1-6, 3.3)",
            "oneOf": 
            [ 
               {"$ref": "specificResource.json#/definitions/specificeResourceDetected" },
               {"$ref": "#/definitions/externalWebResourceDetected" }
            ],
            "allOf" : 
            [
                   { "$ref": "#/definitions/resourceTypeRecognizedIfPresent" },
                   { "$ref": "#/definitions/formatValidIfPresent" },
                   { "$ref": "#/definitions/languageValidIfPresent" },
                   { "$ref": "#/definitions/processingLanguageValidIfPresent" },
                   { "$ref": "#/definitions/textDirectionValidIfPresent" }
    
            ]
        },        

        "resourceTypeRecognizedIfPresent":
        {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "title": "Validation: resource type value",
            "description": "True when body or target type value(s) is (are) recommended class(es) (Section 3.2.2)",
            "type": "object", 
            "properties": 
            {
                "type":
               { "oneOf":
                  [
                	{ "type": "string",
                	  "enum": [ "Dataset", "Image", "Video", "Sound", "Text" ] },
                	{ "type": "array",
                	  "items": { "type": "string",
                	             "enum": [ "Dataset", "Image", "Video", "Sound", "Text" ] }
                	}
                  ]
               }
            }
        },
        
        "formatValidIfPresent":
        {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "title": "Validation: format value",
            "description": "True when the body or target has no format or has a valid format value - single string or array of strings (Section 3.2.1)",
            "type": "object", 
            "properties": 
            {
                "format": 
                {
                    "oneOf":
                    [
                       {"type": "string"},
                       {"type": "array",
                        "minItems": 1,
                        "items" : {"type": "string"}
                       }
                    ]
                }
            }            
        },
        
        "formatSingularIfPresent":
        {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "title": "Definitions: format",
            "description": "True when the body or target has exactly one format value (Section 3.2.1)",
            "type": "object", 
            "properties":
            {
                "format": 
                {
                    "oneOf": 
                    [
                        {"type": "string"},
                        {"type": "array", 
                         "minItems": 1, 
                         "maxItems": 1,
                         "items" : {"type": "string"} }
                    ]
               }
             }
        },
        
        "formatPropertyFound":
        {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "title": "Collate: format key with qualifying body/target classes",
            "description": "Supports implementation check of format (if/when) used on External Web Resources, Specific Resources, Textual Body Resources (Sections 3.2.1-6, 3.3)",
            "oneOf": 
            [ 
               {"$ref": "specificResource.json#/definitions/specificeResourceDetected" },
               {"$ref": "#/definitions/externalWebResourceDetected" },
               {"$ref": "#/definitions/textualBodyFound" }
            ],
            "allOf" : 
            [
                        { "required": ["format" ] },    
                        { "$ref": "#/definitions/formatValidIfPresent" }
            ]
        },

        "singleFormatPropertyFound":
        {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "title": "Collate: format key with qualifying body/target classes",
            "description": "Supports implementation check of format being singular (if/when) used on External Web Resources, Specific Resources, Textual Body Resources (Sections 3.2.1-6, 3.3)",
            "oneOf": 
            [ 
               {"$ref": "specificResource.json#/definitions/specificeResourceDetected" },
               {"$ref": "#/definitions/externalWebResourceDetected" },
               {"$ref": "#/definitions/textualBodyFound" }
            ],
            "allOf" : 
            [    
                        { "required": ["format"] },
                        { "$ref": "#/definitions/formatSingularIfPresent" }
            ]
        },        

        "languageValidIfPresent":
        {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "title": "Validation: language value",
            "description": "True when the body or target has no language or has a valid language value - single string or array of strings (Section 3.2.1)",
            "type": "object", 
             "properties": 
            {
                "language": 
                {
                    "oneOf":
                    [
                       {"type": "string"},
                       {"type": "array",
                        "minItems": 1,
                        "items" : {"type": "string"}
                       }
                    ]
                }
            }
        },
        
        "languageSingularIfPresent":
        {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "title": "Definitions: language",
            "description": "True when the body or target has no language or has exactly one language property - single string (Section 3.2.1)",
            "type": "object", 
            "properties":
            {
                "language":
                  {
                    "oneOf": 
                    [
                        {"type": "string"},
                        {"type": "array", 
                         "minItems": 1, 
                         "maxItems": 1,
                         "items" : {"type": "string"} }
                    ]
                }
           }
        },

        "languagePropertyFound":
        {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "title": "Collate: language key with qualifying body/target classes",
            "description": "Supports implementation check of language (if/when) used on External Web Resources, Specific Resources, Textual Body Resources (Sections 3.2.1-6, 3.3)",
            "oneOf": 
            [ 
               {"$ref": "specificResource.json#/definitions/specificeResourceDetected" },
               {"$ref": "#/definitions/externalWebResourceDetected" },
               {"$ref": "#/definitions/textualBodyFound" }
            ],
            "allOf" : 
            [
                        { "required": ["language" ] },    
                        { "$ref": "#/definitions/languageValidIfPresent" }
            ]
        },

        "singleLanguagePropertyFound":
        {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "title": "Collate: language key with qualifying body/target classes",
            "description": "Supports implementation check of language being singular (if/when) used on External Web Resources, Specific Resources, Textual Body Resources (Sections 3.2.1-6, 3.3)",
            "oneOf": 
            [ 
               {"$ref": "specificResource.json#/definitions/specificeResourceDetected" },
               {"$ref": "#/definitions/externalWebResourceDetected" },
               {"$ref": "#/definitions/textualBodyFound" }
            ],
            "allOf" : 
            [    
                        { "required": ["language"] },
                        { "$ref": "#/definitions/languageSingularIfPresent" }
            ]
        },

        "processingLanguageValidIfPresent":
        {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "title": "Validation: processingLanguage",
            "description": "True when the Body or Target has no processingLanguage or exactly one processingLanguage property (Section 3.2.1)",
            "type": "object", 
            "properties":
            {
                "processingLanguage": 
                  {
                    "oneOf": 
                    [
                        {"type": "string"},
                        {"type": "array", 
                         "minItems": 1, 
                         "maxItems": 1,
                         "items" : {"type": "string"} }
                    ]
                }
             }
        },

        "processingLanguagePropertyFound" :
        {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "title": "Collate: processingLanguage Key with qualifying body/target classes",
            "description": "Supports implementation check of processingLanguage (if/when) used on External Web Resources, Specific Resources, Textual Body Resources (Sections 3.2.1-6, 3.3)",
            "oneOf": 
            [ 
               {"$ref": "specificResource.json#/definitions/specificeResourceDetected" },
               {"$ref": "#/definitions/externalWebResourceDetected" },
               {"$ref": "#/definitions/textualBodyFound" }
            ],
            "allOf" : 
            [
                        { "required": ["processingLanguage" ] },    
                        { "$ref": "#/definitions/processingLanguageValidIfPresent" }
            ]
        },        

        "textDirectionValidIfPresent":
        {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "title": "Validation: textDirection",
            "description": "True when the body or target has no textDirection or exactly one valid textDirection (Section 3.2.1)",
            "type": "object", 
            "properties":
            {
                "textDirection": 
                  {
                    "oneOf": 
                    [
                        {"type": "string",
                         "enum": ["ltr", "rtl", "auto"] },
                        {"type": "array", 
                         "minItems": 1, 
                         "maxItems": 1,
                         "items" : {"type": "string",
                                    "enum": ["ltr", "rtl", "auto"] } }
                    ]
                }
             }
        },

        "textDirectionPropertyFound" :
        {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "title": "Collate: textDirection Key with qualifying body/target classes",
            "description": "Supports implementation check of textDirection (if/when) used on External Web Resources, Specific Resources, Textual Body Resources (Sections 3.2.1-6, 3.3)",
            "oneOf": 
            [ 
               {"$ref": "specificResource.json#/definitions/specificeResourceDetected" },
               {"$ref": "#/definitions/externalWebResourceDetected" },
               {"$ref": "#/definitions/textualBodyFound" }
            ],
            "allOf" : 
            [
                        { "required": ["textDirection" ] },    
                        { "$ref": "#/definitions/textDirectionValidIfPresent" }
            ]
        }        

    }
}