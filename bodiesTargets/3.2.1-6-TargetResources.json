{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "3.2.1-6-TargetResources.json",
    "title": "Checks for and validates specific keys for Target Resources",
    "description": "Each schema in #/definitions checks a key or constraint on Resource desription used as Target of Annotation from Section 3.2.1 - 3.2.6 and/or Section 3.3, referencing definition / common schemas as needed.",
    "type": "object",
    "properties": 
    {
        "target":
        { "oneOf": [
              { "type" : ["string", "object"], 
                "anyOf": [
                   {"$ref": "id.json#/definitions/stringUri"}, 
                   {"$ref": "choiceSet.json#/definitions/choiceDetected" }, 
                   {"$ref": "choiceSet.json#/definitions/compositeDetected" }, 
                   {"$ref": "choiceSet.json#/definitions/independentsDetected" }, 
                   {"$ref": "choiceSet.json#/definitions/listDetected" }, 
                   {"$ref": "bodyTarget.json#/definitions/optionalTargetPropertiesMust" }
                 ]              
              },
              { "type" : ["array"], 
                "items": {"anyOf": [
                   {"$ref": "id.json#/definitions/stringUri"}, 
                   {"$ref": "choiceSet.json#/definitions/choiceDetected" }, 
                   {"$ref": "choiceSet.json#/definitions/compositeDetected" }, 
                   {"$ref": "choiceSet.json#/definitions/independentsDetected" }, 
                   {"$ref": "choiceSet.json#/definitions/listDetected" }, 
                   {"$ref": "bodyTarget.json#/definitions/optionalTargetPropertiesMust" }
                 ] 
               } 
             }
           ]      
        }
    },              

    "definitions": 
    { 

        "webResourceUsed":
        {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "assertionType": "may",
            "expectedResult": "invalid",
            "onUnexpectedResult" : "suceedAndContinue",
            "errorMessage": "Informational: At least one target is an External Web Resource.",    
            "title": "Check for External Web Resources as target",
            "description": "True if Annotation contains 1 or more External Web Resources as Target (Section 3.2.1)",
            "type": "object",
            "properties":
            {
                "target": 
                { 
                    "oneOf":
                    [
                         { "type": "object",
                           "$ref": "bodyTarget.json#/definitions/externalWebResourceDetected"  
                         },
                         { "type": "array",
                           "not": {"items": { "not": { "$ref": "bodyTarget.json#/definitions/externalWebResourceDetected" } } } 
                         } 
                    ]  
                }
            }
         },
         
         "textDirectionUsed": 
         {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "assertionType": "may",
            "expectedResult": "invalid",
            "onUnexpectedResult" : "suceedAndContinue",
            "errorMessage": "Informational: Annotation implements textDirection on one or more targets.",    
            "title": "Check for textDirection",
            "description": "True if one or more qualifying target(s) includes textDirection(Section 3.2.1)",
            "type": "object",
            "properties": 
            {
                "target":
                {
                    "oneOf":
                     [
                         { "type":  "object",
                           "$ref": "bodyTarget.json#/definitions/textDirectionPropertyFound"  
                         },
                         { "type": "array",
                           "not": {"items": { "not": { "$ref": "bodyTarget.json#/definitions/textDirectionPropertyFound" } } } 
                         } 
                    ]  
                }
            }
         },
         
         "textDirectionValid":
         {
             
         },
         
         "processingLanguageUsed":
         {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "assertionType": "may",
            "expectedResult": "invalid",
            "onUnexpectedResult" : "suceedAndContinue",
            "errorMessage": "Informational: Annotation implements processingLanguage on one or more targets.",    
            "title": "Check for processingLanguage",
            "description": "True if one or more qualifying target(s) includes processingLanguage(Section 3.2.1)",
            "type": "object",
            "properties": 
            {
                "target":
                {
                    "oneOf":
                     [
                         { "type":  "object",
                           "$ref": "bodyTarget.json#/definitions/processingLanguagePropertyFound"  
                         },
                         { "type": "array",
                           "not": {"items": { "not": { "$ref": "bodyTarget.json#/definitions/processingLanguagePropertyFound" } } } 
                         } 
                    ]  
                }
            }             
         },
         
         "processingLanguageValid":
         {
             
         },
         
        "languageUsed":
        {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "assertionType": "may",
            "expectedResult": "invalid",
            "onUnexpectedResult" : "suceedAndContinue",
            "errorMessage": "Informational: Annotation implements Language on one or more targets.",    
            "title": "Check for Language",
            "description": "True if one or more qualifying target(s) includes Language(Section 3.2.1)",
            "type": "object",
            "properties": 
            {
                "target":
                {
                    "oneOf":
                     [
                         { "type":  "object",
                           "$ref": "bodyTarget.json#/definitions/languagePropertyFound"  
                         },
                         { "type": "array",
                           "not": {"items": { "not": { "$ref": "bodyTarget.json#/definitions/languagePropertyFound" } } } 
                         } 
                    ]  
                }
            } 
        },

         "languageValid":
         {
             
         },
         
        "singleLanguageShould":
         {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "assertionType": "should",
            "expectedResult": "valid",
            "onUnexpectedResult" : "suceedAndContinue",
            "errorMessage": "Warning: External Web Resource Targets, Embedded Textual Targets, Specific Resource Targets should each have exactly 1 language value.",    
            "title": "Check for zero or more than 1 language per qualifying target",
            "description": "True if all qualifying target(s) have exactly 1 language value each (Section 3.2.1). Remains valid if no qualifying targets.",
            "type": "object",
            "properties": 
            {
                "target":
                 { "oneOf": [
                      { "type" : ["string", "object"], 
                        "anyOf": [
                           {"$ref": "id.json#/definitions/stringUri"}, 
                           {"$ref": "choiceSet.json#/definitions/choiceDetected" }, 
                           {"$ref": "choiceSet.json#/definitions/compositeDetected" }, 
                           {"$ref": "choiceSet.json#/definitions/independentsDetected" }, 
                           {"$ref": "choiceSet.json#/definitions/listDetected" }, 
                           {"$ref": "bodyTarget.json#/definitions/singleLanguagePropertyFound" }
                         ]              
                      },
                      { "type" : ["array"], 
                        "items": {"anyOf": [
                           {"$ref": "id.json#/definitions/stringUri"}, 
                           {"$ref": "choiceSet.json#/definitions/choiceDetected" }, 
                           {"$ref": "choiceSet.json#/definitions/compositeDetected" }, 
                           {"$ref": "choiceSet.json#/definitions/independentsDetected" }, 
                           {"$ref": "choiceSet.json#/definitions/listDetected" }, 
                           {"$ref": "bodyTarget.json#/definitions/singleLanguagePropertyFound" }
                         ] 
                       } 
                     }
                   ]      
                } 
             }
         },
         
        "formatUsed":
        {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "assertionType": "may",
            "expectedResult": "invalid",
            "onUnexpectedResult" : "suceedAndContinue",
            "errorMessage": "Informational: Annotation implements format on one or more targets.",    
            "title": "Check for format",
            "description": "True if one or more qualifying target(s) includes format (Section 3.2.1)",
            "type": "object",
            "properties": 
            {
                "target":
                {
                    "oneOf":
                     [
                         { "type":  "object",
                           "$ref": "bodyTarget.json#/definitions/formatPropertyFound"  
                         },
                         { "type": "array",
                           "not": {"items": { "not": { "$ref": "bodyTarget.json#/definitions/formatPropertyFound" } } } 
                         } 
                    ]  
                }
            } 
        },

         "formatValid":
         {
             
         },
         
        "singleFormatShould":
         {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "assertionType": "should",
            "expectedResult": "valid",
            "onUnexpectedResult" : "suceedAndContinue",
            "errorMessage": "Warning: External Web Resource Targets, Specific Resource Targets should each have exactly 1 format value.",    
            "title": "Check for zero or than 1 format per qualifying target",
            "description": "True if all qualifying target(s) have exactly 1 format value each (Section 3.2.1); Remains valid if no qualifying targets.",
            "type": "object",
            "properties": 
            {
                "target":
                 { "oneOf": [
                      { "type" : ["string", "object"], 
                        "anyOf": [
                           {"$ref": "id.json#/definitions/stringUri"}, 
                           {"$ref": "choiceSet.json#/definitions/choiceDetected" }, 
                           {"$ref": "choiceSet.json#/definitions/compositeDetected" }, 
                           {"$ref": "choiceSet.json#/definitions/independentsDetected" }, 
                           {"$ref": "choiceSet.json#/definitions/listDetected" }, 
                           {"$ref": "bodyTarget.json#/definitions/singleFormatPropertyFound" }
                         ]              
                      },
                      { "type" : ["array"], 
                        "items": {"anyOf": [
                           {"$ref": "id.json#/definitions/stringUri"}, 
                           {"$ref": "choiceSet.json#/definitions/choiceDetected" }, 
                           {"$ref": "choiceSet.json#/definitions/compositeDetected" }, 
                           {"$ref": "choiceSet.json#/definitions/independentsDetected" }, 
                           {"$ref": "choiceSet.json#/definitions/listDetected" }, 
                           {"$ref": "bodyTarget.json#/definitions/singleFormatPropertyFound" }
                         ] 
                       } 
                     }
                   ]      
                }     
            }
       },

        "createdValid":
        {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "assertionType": "must",
            "expectedResult": "valid",
            "onUnexpectedResult" : "failAndContinue",
            "errorMessage": "Error: At least one body has an invalid created value.",    
            "title": "Check that all created value(s) on resource(s) are valid",
            "description": "True if no use of created on the resource(s) checked or if all uses found are date-time format (Section 3.3.1)",
            "type": "object",
            "properties": 
            {
                "target": { "$ref": "otherProperties.json#/definitions/createdValidIfPresent" }
            }
        },
        
        "singleCreatedShould":
        {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "assertionType": "should",
            "expectedResult": "valid",
            "onUnexpectedResult" : "suceedAndContinue",
            "errorMessage": "Warning: External Web Resources, Textual Bodies, Specific Resources should each have exactly 1 created value.",    
            "title": "Check for one created per qualifying body",
            "description": "True if all qualifying resources have exactly 1 created value each (Section 3.3.1); Remains valid if no qualifying resources.",
            "type": "object",
            "properties": 
            {
                "target":
                 { "oneOf": [
                      { "type" : ["string", "object"], 
                        "anyOf": [
                           {"$ref": "id.json#/definitions/stringUri"}, 
                           {"$ref": "choiceSet.json#/definitions/choiceDetected" }, 
                           {"$ref": "choiceSet.json#/definitions/compositeDetected" }, 
                           {"$ref": "choiceSet.json#/definitions/independentsDetected" }, 
                           {"$ref": "choiceSet.json#/definitions/listDetected" }, 
                           {"$ref": "otherProperties.json#/definitions/createdPropertyFound" }
                         ]              
                      },
                      { "type" : ["array"], 
                        "items": {"anyOf": [
                           {"$ref": "id.json#/definitions/stringUri"}, 
                           {"$ref": "choiceSet.json#/definitions/choiceDetected" }, 
                           {"$ref": "choiceSet.json#/definitions/compositeDetected" }, 
                           {"$ref": "choiceSet.json#/definitions/independentsDetected" }, 
                           {"$ref": "choiceSet.json#/definitions/listDetected" }, 
                           {"$ref": "otherProperties.json#/definitions/createdPropertyFound" }
                         ] 
                       } 
                     }
                   ]      
                }     
            }
        },
        
        "modifiedValid":
        {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "assertionType": "must",
            "expectedResult": "valid",
            "onUnexpectedResult" : "failAndContinue",
            "errorMessage": "Error: At least one body has an invalid modified value.",    
            "title": "Check that all modified value(s) on resource(s) are valid",
            "description": "True if no use of modified on the resource(s) checked or if all uses found are date-time format (Section 3.3.1)",
            "type": "object",
            "properties": 
            {
                "target": { "$ref": "otherProperties.json#/definitions/modifiedValidIfPresent" }
            }
        },

        "modifiedUsed":
        {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "assertionType": "may",
            "expectedResult": "invalid",
            "onUnexpectedResult" : "suceedAndContinue",
            "errorMessage": "Informational: Annotation implements modified correctly on one or more bodies.",    
            "title": "Check for modified",
            "description": "True if one or more resources includes modified (Section 3.3.1)",
            "properties": 
            {
                "target":
                {
                    "oneOf":
                     [
                         { "type":  "object",
                           "$ref": "bodyTarget.json#/definitions/modifiedPropertyFound"  
                         },
                         { "type": "array",
                           "not": {"items": { "not": { "$ref": "bodyTarget.json#/definitions/modifiedPropertyFound" } } } 
                         } 
                    ]  
                }
            } 
        }        
       
        
   }
}